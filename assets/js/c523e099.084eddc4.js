"use strict";(self.webpackChunk_etherealengine_docs=self.webpackChunk_etherealengine_docs||[]).push([[9875],{8976:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>h});var t=i(4848),s=i(8453),l=i(8020);const o={},r="iR Engine on Minikube",a={id:"manual/modules/infrastructure/devopsDeployment/minikube",title:"iR Engine on Minikube",description:"Install kubectl, Helm, Docker, and VirtualBox",source:"@site/docs/manual/03_modules/05_infrastructure/03_devopsDeployment/02_minikube.md",sourceDirName:"manual/03_modules/05_infrastructure/03_devopsDeployment",slug:"/manual/modules/infrastructure/devopsDeployment/minikube",permalink:"/etherealengine-docs/manual/modules/infrastructure/devopsDeployment/minikube",draft:!1,unlisted:!1,editUrl:"https://github.com/EtherealEngine/etherealengine-docs/blob/master/docs/manual/03_modules/05_infrastructure/03_devopsDeployment/02_minikube.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"manual",previous:{title:"iR Engine on Docker Desktop",permalink:"/etherealengine-docs/manual/modules/infrastructure/devopsDeployment/dockerDesktop"},next:{title:"iR Engine on AWS",permalink:"/etherealengine-docs/manual/modules/infrastructure/devopsDeployment/AWSSetup/"}},c={},h=[{value:"Install kubectl, Helm, Docker, and VirtualBox",id:"install-kubectl-helm-docker-and-virtualbox",level:2},{value:"Download and install minikube",id:"download-and-install-minikube",level:2},{value:"Clone iR Engine repo to your local machine",id:"clone-ir-engine-repo-to-your-local-machine",level:2},{value:"Start MinIO &amp; MariaDB server locally via Docker",id:"start-minio--mariadb-server-locally-via-docker",level:2},{value:"Create minikube cluster",id:"create-minikube-cluster",level:2},{value:"Starting ingress after minikube has started",id:"starting-ingress-after-minikube-has-started",level:3},{value:"Get minikube IP address and edit system hostfile to point to",id:"get-minikube-ip-address-and-edit-system-hostfile-to-point-to",level:2},{value:"Add Helm repos",id:"add-helm-repos",level:2},{value:"Install Agones and Redis deployments",id:"install-agones-and-redis-deployments",level:2},{value:"Install Elastic Search and Kibana using Helm for Server Logs",id:"install-elastic-search-and-kibana-using-helm-for-server-logs",level:2},{value:"Run build_minikube.sh",id:"run-build_minikubesh",level:2},{value:"Update Helm Values File",id:"update-helm-values-file",level:2},{value:"Deploy iR Engine Helm chart",id:"deploy-ir-engine-helm-chart",level:2},{value:"Accept invalid certs",id:"accept-invalid-certs",level:2},...l.RM];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"ir-engine-on-minikube",children:"iR Engine on Minikube"}),"\n",(0,t.jsx)(n.h2,{id:"install-kubectl-helm-docker-and-virtualbox",children:"Install kubectl, Helm, Docker, and VirtualBox"}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tools/",children:"kubectl"}),", ",(0,t.jsx)(n.a,{href:"https://helm.sh/docs/intro/install/",children:"Helm"}),",\n",(0,t.jsx)(n.a,{href:"https://docs.docker.com/get-docker/",children:"Docker"})," and/or ",(0,t.jsx)(n.a,{href:"https://www.virtualbox.org/wiki/Downloads",children:"VirtualBox"}),"\naren't already installed on your machine, install them."]}),"\n",(0,t.jsxs)(n.p,{children:["You may also need to install ",(0,t.jsx)(n.a,{href:"https://docs.docker.com/compose/install/",children:"Docker Compose"})]}),"\n",(0,t.jsx)(n.h2,{id:"download-and-install-minikube",children:"Download and install minikube"}),"\n",(0,t.jsxs)(n.p,{children:["Instructions can be found ",(0,t.jsx)(n.a,{href:"https://minikube.sigs.k8s.io/docs/start/",children:"here"})]}),"\n",(0,t.jsx)(n.p,{children:"While you can follow the demo instructions there about starting minikube, deploying\nsome demo deployments, etc. to get a feel for it, before deploying iR Engine you should delete\nyour minikube cluster, since we have some specific starting requirements."}),"\n",(0,t.jsx)(n.h2,{id:"clone-ir-engine-repo-to-your-local-machine",children:"Clone iR Engine repo to your local machine"}),"\n",(0,t.jsxs)(n.p,{children:["To build the iR Engine Docker image locally, and to have a pre-tested way to run various local\nservices, you'll need to get the iR Engine repo on your machine. This is most easily\ndone by running ",(0,t.jsx)(n.code,{children:"git clone https://github.com/etherealengine/etherealengine.git"})]}),"\n",(0,t.jsx)(n.h2,{id:"start-minio--mariadb-server-locally-via-docker",children:"Start MinIO & MariaDB server locally via Docker"}),"\n",(0,t.jsx)(n.p,{children:"For simplicity, we recommend running MinIO & MariaDB server on your local machine outside of MicroK8s."}),"\n",(0,t.jsxs)(n.p,{children:["If you run ",(0,t.jsx)(n.code,{children:"docker-compose up"})," from the top-level ",(0,t.jsx)(n.code,{children:"/scripts"})," directory in the iR Engine repo, it will start up MinIO & multiple MariaDB docker containers (as well as a redis server, which is not needed). For mariadb containers, one is intended for local development, runs on port 3306; another, intended for automated testing purposes, runs on port 3305; and the last one, intended for minikube/microk8s testing, runs on port 3304. Once the docker container is stopped, you can start it again by running ",(0,t.jsx)(n.code,{children:"npm run dev-docker"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Alternatively, if you want to just run MinIO & MariaDB on its own without Docker, that's fine too. You'll just have to configure the Helm config file to have the appropriate S3 & SQL server configuration, and possibly change the script ",(0,t.jsx)(n.code,{children:"./scripts/build_minikube.sh"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"create-minikube-cluster",children:"Create minikube cluster"}),"\n",(0,t.jsxs)(n.p,{children:["Run the following command:\n",(0,t.jsx)(n.code,{children:"minikube start --disk-size 40000m --cpus 4 --memory 10124m --addons ingress --driver virtualbox"})]}),"\n",(0,t.jsx)(n.p,{children:"This says to start minikube with 40GB of disk space, 4 CPUs, 10GB of memory, using VirtualBox as its\ndriver, and starting up an nginx ingress service."}),"\n",(0,t.jsx)(n.p,{children:"The disk space, CPUs, and memory allocation are configurable. These are what we recommend for optimal\nrunning (though the disk space might be a bit more than necessary). When minikube is running,\nit will reserve those resources for itself regardless of whether the services in minikube are using\nthat much."}),"\n",(0,t.jsx)(n.p,{children:"The 10GB of memory might be the spec with the least wiggle room. Later instructions on building\nthe Docker image will have it be built in the minikube context. This uses the RAM reserved for minikube,\nand the client build process normally uses about 8GB of RAM at its peak. minikube may freeze if\nit gets maxed out on RAM, and the Docker build process might freeze indefinitely."}),"\n",(0,t.jsx)(n.h3,{id:"starting-ingress-after-minikube-has-started",children:"Starting ingress after minikube has started"}),"\n",(0,t.jsxs)(n.p,{children:["If you forget to use ",(0,t.jsx)(n.code,{children:"--addons ingress"})," when starting minikube, you can start nginx later by\nrunning ",(0,t.jsx)(n.code,{children:"minikube addons enable ingress"})]}),"\n",(0,t.jsx)(n.h2,{id:"get-minikube-ip-address-and-edit-system-hostfile-to-point-to",children:"Get minikube IP address and edit system hostfile to point to"}),"\n",(0,t.jsxs)(n.p,{children:["Run this command after minikube has started: ",(0,t.jsx)(n.code,{children:"minikube ip"}),"\nThis will get you the address that minikube is running on."]}),"\n",(0,t.jsxs)(n.p,{children:["You'll need to edit your hostfile to point certain domains to minikube IP addresses. On Linux,\nthis is done by running ",(0,t.jsx)(n.code,{children:"sudo gedit /etc/hosts"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Add the following lines:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-conf",children:"<Output of 'minikube ip'>  local.etherealengine.org api-local.etherealengine.org instanceserver-local.etherealengine.org 00000.instanceserver-local.etherealengine.org 00001.instanceserver-local.etherealengine.org 00002.instanceserver-local.etherealengine.org 00003.instanceserver-local.etherealengine.org\n10.0.2.2   host.minikube.internal\n"})}),"\n",(0,t.jsx)(n.p,{children:"The first line says to point several *-local.etherealengine.org domains internally to the minikube cluster,\nwhere the nginx ingress server will redirect the traffic to the appropriate pod.\nThe second line is used to give minikube access to your local environment, particularly so that it\ncan access the MariaDB server."}),"\n",(0,t.jsx)(n.p,{children:"Make sure to save this file after you've edited it. On Linux, at least, you need root permissions\nto edit it."}),"\n",(0,t.jsx)(n.h2,{id:"add-helm-repos",children:"Add Helm repos"}),"\n",(0,t.jsx)(n.p,{children:"You'll need to add a few Helm repos. Run the following:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"helm repo add agones https://agones.dev/chart/stable\nhelm repo add redis https://charts.bitnami.com/bitnami\nhelm repo add etherealengine https://helm.etherealengine.org\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will add the Helm charts for Agones, Redis, and iR Engine, respectively."}),"\n",(0,t.jsx)(n.h2,{id:"install-agones-and-redis-deployments",children:"Install Agones and Redis deployments"}),"\n",(0,t.jsx)(n.p,{children:"After adding those Helm repos, you'll start installing deployments using Helm repos."}),"\n",(0,t.jsxs)(n.p,{children:["Make sure that kubectl is pointed at minikube by running ",(0,t.jsx)(n.code,{children:"kubectl config current-context"}),",\nwhich should say 'minikube'. You can also run ",(0,t.jsx)(n.code,{children:"kubectl config get-contexts"})," to get all contexts\nthat kubectl has been configured to run; the current one will have a '*' under the left-most\n'current' column."]}),"\n",(0,t.jsxs)(n.p,{children:["Once kubectl is pointed to minikube, from the top of the iR Engine repo, run\n",(0,t.jsx)(n.code,{children:"helm install -f </path/to/agones-default-values.yaml> agones agones/agones"})," to install Agones\nand ",(0,t.jsx)(n.code,{children:"helm install local-redis redis/redis"})," to install redis."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/EtherealEngine/ethereal-engine-ops/blob/master/configs/agones-default-values.yaml",children:"agones-default-values.yaml"})," can be found in ",(0,t.jsx)(n.a,{href:"https://github.com/EtherealEngine/ethereal-engine-ops",children:"ethereal-engine-ops"})," repo."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["You can run ",(0,t.jsx)(n.code,{children:"kubectl get pods -A"})," to list all of the pods running in minikube. After a minute or so,\nall of these pods should be in the Running state."]}),"\n",(0,t.jsx)(n.h2,{id:"install-elastic-search-and-kibana-using-helm-for-server-logs",children:"Install Elastic Search and Kibana using Helm for Server Logs"}),"\n",(0,t.jsxs)(n.p,{children:["To install Elasticsearch, add the elastic repository in Helm: ",(0,t.jsx)(n.code,{children:"helm repo add elastic https://helm.elastic.co"})]}),"\n",(0,t.jsx)(n.p,{children:"Now, use the curl command to download the values.yaml file containing configuration information:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"curl -O https://raw.githubusercontent.com/elastic/helm-charts/master/elasticsearch/examples/minikube/values.yaml"})}),"\n",(0,t.jsx)(n.p,{children:"Use the helm install command and the values.yaml file to install the Elasticsearch helm chart:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"helm install elasticsearch elastic/elasticsearch -f ./values.yaml"})}),"\n",(0,t.jsxs)(n.p,{children:["The -f option allows specifying the yaml file with the template. If you wish to install Elasticsearch in a specific namespace, add the -n option followed by the name of the namespace: ",(0,t.jsx)(n.code,{children:"helm install elasticsearch elastic/elasticsearch -n [namespace] -f ./values.yaml"})]}),"\n",(0,t.jsxs)(n.p,{children:["Now check if the cluster members are up: ",(0,t.jsx)(n.code,{children:"kubectl get pods --namespace=default -l app=elasticsearch-master -w"})]}),"\n",(0,t.jsxs)(n.p,{children:["The other option is to use the helm test command to examine the cluster\u2019s health: ",(0,t.jsx)(n.code,{children:"helm test elasticsearch"})]}),"\n",(0,t.jsxs)(n.p,{children:["To install Kibana on top of Elasticsearch : ",(0,t.jsx)(n.code,{children:"helm install kibana elastic/kibana"})]}),"\n",(0,t.jsxs)(n.p,{children:["Check if all the pods are ready: ",(0,t.jsx)(n.code,{children:"kubectl get pods"})]}),"\n",(0,t.jsxs)(n.p,{children:["After you set up port-forwarding, access Elasticsearch, and the Kibana GUI by typing ",(0,t.jsx)(n.code,{children:"http://localhost:5601"})," in your browser"]}),"\n",(0,t.jsxs)(n.p,{children:["In order to connect logger with elasticsearch, update ",(0,t.jsx)(n.code,{children:"local.minikube.template.values.yaml"})," env ",(0,t.jsx)(n.code,{children:"api.extraEnv.ELASTIC_HOST"})," for e.g. ",(0,t.jsx)(n.code,{children:"http://<username>:<password>@<host>:<port>"})]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/EtherealEngine/ethereal-engine-ops/blob/master/configs/local.minikube.template.values.yaml",children:"local.minikube.template.values.yaml"})," can be found in ",(0,t.jsx)(n.a,{href:"https://github.com/EtherealEngine/ethereal-engine-ops",children:"ethereal-engine-ops"})," repo."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"run-build_minikubesh",children:"Run build_minikube.sh"}),"\n",(0,t.jsx)(n.p,{children:"When minikube is running, run the following command from the root of the iR Engine repo:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./scripts/build_minikube.sh\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["If you face issue related to ",(0,t.jsx)(n.code,{children:'"packages/projects/projects/" does not exist'})," then run following commands in your terminal:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export MYSQL_HOST=localhost\nnpm run dev-docker\nnpm run dev-reinit\nnpx ts-node --swc scripts/install-projects.js\nexport MYSQL_HOST=host.minikube.internal\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This points Docker ",(0,t.jsx)(n.em,{children:"in the current terminal"})," to minikube's Docker environment. Anything that Docker builds\nwill be locally accessible to minikube; if the first main command in the script were not run, Docker would build to your\nmachine's Docker environment, and minikube would not have access to it."]}),"\n",(0,t.jsxs)(n.p,{children:["The script also builds the full-repo Docker image using several build arguments. Vite, which builds\nthe client files, uses some information from the MariaDB database created for minikube deployments\nto fill in some variables, and needs database credentials. The script will supply default values\nfor all of the MYSQL_* variables if they are not provided to the script, as well as VITE_CLIENT_HOST,\nVITE_SERVER_HOST, and VITE_INSTANCESERVER_HOST. The latter three will make your minikube deployment\naccessible on ",(0,t.jsx)(n.code,{children:"(local/api-local/instanceserver-local).etherealengine.org"}),"; if you want to run it on a different\ndomain, then you'll have to set those three environment variables to what you want them to be (and also\nchange the hostfile records you made pointing those subdomains to minikube's IP)"]}),"\n",(0,t.jsx)(n.p,{children:"This will build an image of the entire iR Engine repo into a single Docker file. When deployed for\ndifferent services, it will only run the parts needed for that service. This may take up to 15 minutes,\nthough later builds should take less time as things are cached."}),"\n",(0,t.jsx)(n.h2,{id:"update-helm-values-file",children:"Update Helm Values File"}),"\n",(0,t.jsxs)(n.p,{children:["This will use a Helm config file titled 'local.values.yaml' to configure the deployment. There is\na ",(0,t.jsx)(n.a,{href:"https://github.com/EtherealEngine/ethereal-engine-ops/blob/master/configs/local.minikube.template.values.yaml",children:"template"})," for this file in ",(0,t.jsx)(n.a,{href:"https://github.com/EtherealEngine/ethereal-engine-ops",children:"ethereal-engine-ops"})," repo."]}),"\n",(0,t.jsxs)(n.p,{children:["If you are using local file server as explained couple of steps earlier then, update 'local.values.yaml' variable ",(0,t.jsx)(n.code,{children:"api.fileServer.hostUploadFolder"})," with value e.g. '/hosthome/<OS_USER_NAME>/<ENGINE_FOLDER>/packages/server/upload'. The folder must be in home folder and make sure to use /hosthome/ instead of home in path. Its mandatory to point to ",(0,t.jsx)(n.code,{children:"/packages/server/upload"})," folder of your engine folder."]}),"\n",(0,t.jsx)(n.h2,{id:"deploy-ir-engine-helm-chart",children:"Deploy iR Engine Helm chart"}),"\n",(0,t.jsxs)(n.p,{children:["Run the following command: ",(0,t.jsx)(n.code,{children:"helm install -f </path/to/local.values.yaml> -f </path/to/db-refresh-true.values.yaml> local etherealengine/etherealengine"}),"."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/EtherealEngine/ethereal-engine-ops/blob/master/configs/db-refresh-true.values.yaml",children:"db-refresh-true.values.yaml"})," can be found in ",(0,t.jsx)(n.a,{href:"https://github.com/EtherealEngine/ethereal-engine-ops",children:"ethereal-engine-ops"})," repo."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["After a minute or so, running ",(0,t.jsx)(n.code,{children:"kubectl get pods"})," should show one or more instanceservers, one or more api\nservers, and one client server in the Running state. Setting ",(0,t.jsx)(n.code,{children:"FORCE_DB_REFRESH=true"})," made the api servers\n(re)initialize the database. Since you don't want that to happen every time a new api pod starts, run\n",(0,t.jsx)(n.code,{children:"helm upgrade --reuse-values -f </path/to/db-refresh-false.values.yaml> local etherealengine/etherealengine"}),".\nThe API pods will restart and will now not attempt to reinit the database on boot."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/EtherealEngine/ethereal-engine-ops/blob/master/configs/db-refresh-false.values.yaml",children:"db-refresh-false.values.yaml"})," can be found in ",(0,t.jsx)(n.a,{href:"https://github.com/EtherealEngine/ethereal-engine-ops",children:"ethereal-engine-ops"})," repo."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"accept-invalid-certs",children:"Accept invalid certs"}),"\n",(0,t.jsx)(l.Ay,{})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8020:(e,n,i)=>{i.d(n,{Ay:()=>r,RM:()=>l});var t=i(4848),s=i(8453);const l=[];function o(e){const n={a:"a",blockquote:"blockquote",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Since there are no valid certificates for this domain, you'll have to tell your browser to ignore the insecure connections when you try to load the application."}),"\n",(0,t.jsxs)(n.p,{children:["Go to <",(0,t.jsx)(n.a,{href:"https://local.etherealengine.org/%3E",children:"https://local.etherealengine.org/>"}),", you should see a warning about an invalid certificate; accept this invalid cert to get to the home page. Next if it keeps displaying 'loading routes' progress for a long time, it is due to the fact that you have to allow certificates. You'll have to open the dev tools for your browser and go to the 'Console' tab. You will see some errors in URL address starting with 'wss'. Replace 'wss' with 'https' and open it in new tab. Accept the certificate and reload your iR Engine tab. You need to do this for following domains:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["wss://api-local.etherealengine.org -> ",(0,t.jsx)(n.a,{href:"https://api-local.etherealengine.org",children:"https://api-local.etherealengine.org"})]}),"\n",(0,t.jsxs)(n.li,{children:["wss://instanceserver-local.etherealengine.org -> ",(0,t.jsx)(n.a,{href:"https://instanceserver-local.etherealengine.org",children:"https://instanceserver-local.etherealengine.org"})]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://localhost:9000",children:"https://localhost:9000"})}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"You can open Developer tools in Chrome by clicking the side menu with three dots, then More tools > Developer tools (or use Ctrl+Shift+I)"}),"\n"]})]})}function r(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var t=i(6540);const s={},l=t.createContext(s);function o(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);