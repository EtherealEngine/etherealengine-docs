"use strict";(self.webpackChunk_etherealengine_docs=self.webpackChunk_etherealengine_docs||[]).push([[8440],{9691:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var o=t(4848),i=t(8453),s=t(9263);t(7152);const a={sidebar_label:"Custom Component"},r="Defining a Custom Component",c={id:"developer/typescript/basics/recap/component",title:"Defining a Custom Component",description:"The defineComponent function accepts a ComponentPartial that has multiple fields available.",source:"@site/docs/developer/typescript/02_basics/01_recap/02_component.md",sourceDirName:"developer/typescript/02_basics/01_recap",slug:"/developer/typescript/basics/recap/component",permalink:"/etherealengine-docs/developer/typescript/basics/recap/component",draft:!1,unlisted:!1,editUrl:"https://github.com/EtherealEngine/etherealengine-docs/blob/master/docs/developer/typescript/02_basics/01_recap/02_component.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Custom Component"},sidebar:"typescript",previous:{title:"Styling",permalink:"/etherealengine-docs/developer/typescript/basics/recap/styling"},next:{title:"Query",permalink:"/etherealengine-docs/developer/typescript/basics/recap/query"}},l={},d=[{value:"<code>name</code>",id:"name",level:2},{value:"<code>jsonID</code>",id:"jsonid",level:2},{value:"<code>onInit</code>",id:"oninit",level:2},{value:"Other fields",id:"other-fields",level:2}];function h(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"defining-a-custom-component",children:"Defining a Custom Component"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"defineComponent"})," function accepts a ",(0,o.jsx)(n.code,{children:"ComponentPartial"})," that has multiple fields available."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"// Define our component\nconst HelloComponent = ECS.defineComponent({\n  name: 'ee.tutorial.HelloComponent',\n  jsonID: 'EE_tutorial_hello',\n  onInit: () => { return { initialized: false } }\n})\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["See ",(0,o.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype",children:"Typescript.Partial"})," for a reference of what Partials are."]})}),"\n",(0,o.jsx)(n.p,{children:"Lets review what each of these fields do and how to use them."}),"\n",(0,o.jsx)(n.h2,{id:"name",children:(0,o.jsx)(n.code,{children:"name"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"name"})," is a ",(0,o.jsx)(n.code,{children:"string"})," that defines the human readable label for the component that we are creating.",(0,o.jsx)(n.br,{}),"\n","It will be displayed in the editor and debugging tools."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"name: 'ee.tutorial.HelloComponent',\n"})}),"\n",(0,o.jsxs)(n.p,{children:["As we saw before, the engine does not define strict naming requirements for this field, but it does define a ",(0,o.jsx)(n.a,{href:"./styling#id-naming-convention",children:"naming convention"})," that is good practice to follow in your projects."]}),"\n",(0,o.jsx)(n.h2,{id:"jsonid",children:(0,o.jsx)(n.code,{children:"jsonID"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"jsonID"})," is an optional ",(0,o.jsx)(n.code,{children:"string"})," that defines the internal ID used to reference this component in JSON data."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"jsonID: 'EE_tutorial_hello',\n"})}),"\n",(0,o.jsxs)(n.p,{children:["As we saw before, this field will be used by the engine to define the name of a ",(0,o.jsx)(n.a,{href:"https://www.khronos.org/gltf",children:"glTF"})," extension.",(0,o.jsx)(n.br,{}),"\n","Because of this, the ",(0,o.jsx)(n.code,{children:"jsonID"})," field has very specific ",(0,o.jsx)(n.a,{href:"./styling#jsonid-naming-requirements",children:"naming requirements"})," that must be followed."]}),"\n",(0,o.jsx)(n.h2,{id:"oninit",children:(0,o.jsx)(n.code,{children:"onInit"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"onInit"})," is a function that will be called once when the Component is added to an entity ",(0,o.jsx)(n.em,{children:"(ie: initialized)"}),".",(0,o.jsx)(n.br,{}),"\n","It returns the shape of the Component's runtime data, which has the type ",(0,o.jsx)(n.code,{children:"Schema"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"onInit?: (this: SoAComponentType<Schema>, entity: Entity) => ComponentType & OnInitValidateNotState<ComponentType>\n// this    : `@internal` The component partial itself.\n// entity  : The Entity to which this Component is being assigned.\n// returns : The `Schema` (aka shape) of the component's runtime data.\n"})}),"\n",(0,o.jsxs)(n.p,{children:["A Component's Schema can contain any type of data that you want.",(0,o.jsx)(n.br,{}),"\n","In our example from before, we saw how to use this data to store our ",(0,o.jsx)(n.code,{children:"initialized"})," state variable inside the component, instead of storing it in our module."]}),"\n",(0,o.jsx)(n.h2,{id:"other-fields",children:"Other fields"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"ComponentPartial"})," type accepts multiple other fields that we haven't needed for our simple HelloComponent example. These fields are:",(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.code,{children:"schema"}),", ",(0,o.jsx)(n.code,{children:"toJSON"}),", ",(0,o.jsx)(n.code,{children:"onSet"}),", ",(0,o.jsx)(n.code,{children:"onRemove"}),", ",(0,o.jsx)(n.code,{children:"reactor"}),", ",(0,o.jsx)(n.code,{children:"errors"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"We will explore them further in later sections of the tutorial."}),"\n",(0,o.jsxs)(s.W,{children:[(0,o.jsxs)(n.p,{children:["The data used to create a Component with ",(0,o.jsx)(n.code,{children:"defineComponent"})," is declared by the ",(0,o.jsx)(n.code,{children:"ComponentPartial"})," interface.\nThis type exists so that some of the properties of Components are optional when defining them, but required during normal use."]}),(0,o.jsxs)(n.p,{children:["This is the shape of the ",(0,o.jsx)(n.code,{children:"ComponentPartial"})," interface, defined in the ",(0,o.jsx)(n.a,{href:"https://github.com/EtherealEngine/etherealengine/blob/dev/packages/ecs/src/ComponentFunctions.ts",children:(0,o.jsx)(n.code,{children:"ComponentFunctions.ts"})})," file:"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"{\n  name: string\n  jsonID?: string\n  onInit?: (this: SoAComponentType<Schema>, entity: Entity) => ComponentType & OnInitValidateNotState<ComponentType>\n\n  // A Component's Schema is the shape of its runtime data.\n  schema?: Schema\n\n  // Serializer function called when the component is saved to a snapshot or scene file.\n  // Its logic must convert the component's runtime data into a JSON object.\n  // entity    : The Entity to which this Component is assigned.\n  // component : The Component's global data (aka State).\n  toJSON?: (entity: Entity, component: State<ComponentType>) => JSON\n\n  // Called when the component's data is updated via the setComponent function.\n  // This is where deserialization logic should happen.\n  // entity    : The Entity to which this Component is assigned.\n  // component : The Component's global data (aka State).\n  // json      : The JSON object that contains this component's serialized data.\n  onSet?: (entity: Entity, component: State<ComponentType>, json?: SetJSON) => void\n\n  // Called when the Component is removed from an Entity\n  onRemove?: (entity: Entity, component: State<ComponentType>) => void | Promise<void>\n\n  // Defines the React.FC (Function Component) async logic of the resulting Component type.\n  // Any side-effects that depend on the component's data should be defined here.\n  reactor?: React.FC\n\n  errors?: ErrorTypes[]\n}\n"})})]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},9263:(e,n,t)=>{t.d(n,{W:()=>s});var o=t(6540),i=t(4848);const s=e=>{const n=e.title?e.title:"Technical Note";return(0,i.jsx)(o.Fragment,{children:(0,i.jsxs)("details",{className:"alert alert--secondary mb-5 bg-neutral-900",children:[(0,i.jsx)("summary",{className:"text-blue-200 hover:cursor-pointer",children:n}),(0,i.jsx)("div",{className:"pt-4",children:e.children})]})})}},7152:(e,n,t)=>{t.d(n,{B:()=>s});var o=t(6540),i=t(4848);const s=e=>{const n=e.title;return(0,i.jsx)(o.Fragment,{children:(0,i.jsxs)("details",{className:"mb-5",children:[(0,i.jsx)("summary",{className:"text-blue-200 hover:cursor-pointer",children:n}),(0,i.jsx)("div",{className:"pt-4",children:e.children})]})})}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var o=t(6540);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);