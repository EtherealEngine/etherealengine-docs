"use strict";(self.webpackChunk_etherealengine_docs=self.webpackChunk_etherealengine_docs||[]).push([[160],{6516:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var i=n(4848),o=n(8453);const s={},a="Installing Projects",r={id:"manual/modules/infrastructure/devopsDeployment/installingProjects",title:"Installing Projects",description:"Local Install Flow",source:"@site/docs/manual/03_modules/05_infrastructure/03_devopsDeployment/03_installingProjects.md",sourceDirName:"manual/03_modules/05_infrastructure/03_devopsDeployment",slug:"/manual/modules/infrastructure/devopsDeployment/installingProjects",permalink:"/etherealengine-docs/manual/modules/infrastructure/devopsDeployment/installingProjects",draft:!1,unlisted:!1,editUrl:"https://github.com/EtherealEngine/etherealengine-docs/blob/master/docs/manual/03_modules/05_infrastructure/03_devopsDeployment/03_installingProjects.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"manual",previous:{title:"Elastic Search & Kibana",permalink:"/etherealengine-docs/manual/modules/infrastructure/devopsDeployment/AWSSetup/elasticKibana"},next:{title:"Database Migrations",permalink:"/etherealengine-docs/manual/modules/infrastructure/devopsDeployment/databaseMigrations"}},c={},l=[{value:"Local Install Flow",id:"local-install-flow",level:2},{value:"Graphical Install Flow",id:"graphical-install-flow",level:2},{value:"Updating the Engine Version and Rebuilding Projects",id:"updating-the-engine-version-and-rebuilding-projects",level:3}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"installing-projects",children:"Installing Projects"}),"\n",(0,i.jsx)(t.h2,{id:"local-install-flow",children:"Local Install Flow"}),"\n",(0,i.jsxs)(t.p,{children:["To install a project locally, clone the repository you wish to install to the\n",(0,i.jsx)(t.code,{children:"/packages/projects/projects/"})," folder. You can do this with the follow commands:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"cd packages/projects/projects/\ngit clone https://github.com/myorg/myrepo\ncd myrepo \ncode .\n"})}),"\n",(0,i.jsxs)(t.p,{children:["This will create a folder name ",(0,i.jsx)(t.code,{children:"myrepo"})," which must contain an ",(0,i.jsx)(t.code,{children:"xrengine.config.ts"}),"\nfile, and open the project in a new vscode window (such that git commands can be\nhandled by the new window). All you need to do now to run this project is re-run\nthe stack (with ",(0,i.jsx)(t.code,{children:"npm run dev"}),")."]}),"\n",(0,i.jsx)(t.h2,{id:"graphical-install-flow",children:"Graphical Install Flow"}),"\n",(0,i.jsx)(t.p,{children:"Projects can also be installed and managed from the /admin/projects route. You must be\nan admin and must have a linked GitHub account, which can be attained by having your\nGitHub account linked to your iR Engine account by signing in via GitHub.\n(You do not need to have most recently signed in via GitHub, you just have to have\nlinked your GH account at some point)"}),"\n",(0,i.jsxs)(t.p,{children:["See ",(0,i.jsx)(t.a,{href:"./setupGithubOAuth",children:"the section 'How to set up GitHub to install external projects'"}),"\nfor instructions on creating an OAuth app from GitHub, installing it into an iR Engine deployment,\nand authorizing it to have access to your GitHub organizations."]}),"\n",(0,i.jsx)(t.p,{children:"Click the 'Add Project' button:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(6008).A+"",width:"1920",height:"960"})}),"\n",(0,i.jsx)(t.p,{children:"You will see text fields for entering the source and destination repositories.\nWhen you click away from the text fields, the URL will be checked both for the\nrepository existing, and for whether you have sufficient permission to access\nthat repository - read permission for the source repo (public repositories are\nalways available), and write or admin permission for the destination repo. If\nyou have never logged into GitHub with your current account, you will not be\nallowed to add or update projects."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(5509).A+"",width:"1920",height:"960"})}),"\n",(0,i.jsxs)(t.p,{children:["For the source repository, after entering the URL, you will also need to select\na branch to pull from. Your options are either the main branch for that repository,\nor a branch that matches the ",(0,i.jsx)(t.code,{children:"RELEASE_NAME"})," of the deployment, e.g. ",(0,i.jsx)(t.code,{children:"dev-deployment"})," for\na deployment with the environment variable ",(0,i.jsx)(t.code,{children:"RELEASE_NAME=dev"}),". If ",(0,i.jsx)(t.code,{children:"RELEASE_NAME"})," is not defined, then\n",(0,i.jsx)(t.code,{children:"local"})," is used; this could lead to multiple local installations of the platform conflicting,\nbut one can set ",(0,i.jsx)(t.code,{children:"RELEASE_NAME"})," locally to something else in your .env.local file."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(1187).A+"",width:"1920",height:"960"})}),"\n",(0,i.jsx)(t.p,{children:"After the branch is selected, you also need to select a tagged commit from that branch,\nor the most recent commit. As of this writing, you must manually tag project commits yourself,\nthough tags are copied over from the source repository when installing or updating a project."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(3923).A+"",width:"1920",height:"960"})}),"\n",(0,i.jsxs)(t.p,{children:["The backend checks that the source and destination repos have the same project.\nThe project name is the ",(0,i.jsx)(t.code,{children:"name"})," field in the project's package.json file.\nIf the destination repo's ",(0,i.jsx)(t.code,{children:"<RELEASE_NAME>-deployment"})," branch is empty or nonexistent, then\nany project can be uploaded to it. If the destination deployment branch is not empty,\nthen it can only be updated with different versions of that project. For example,\nif the destination branch has project ",(0,i.jsx)(t.code,{children:"example1"})," in it, you will not be allowed to\noverwrite it with a project ",(0,i.jsx)(t.code,{children:"test3"}),", only other projects named ",(0,i.jsx)(t.code,{children:"example1"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(68).A+"",width:"1920",height:"960"})}),"\n",(0,i.jsxs)(t.p,{children:["You can only install a project with a given name once, and names are ",(0,i.jsx)(t.strong,{children:"case-insensitive"}),";\n",(0,i.jsx)(t.code,{children:"example1"})," is seen as the same name as ",(0,i.jsx)(t.code,{children:"ExamplE1"}),". You would need to remove an existing project\nin order to install a different project that has the same name, or rename one of the projects."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(4024).A+"",width:"1920",height:"960"})}),"\n",(0,i.jsx)(t.p,{children:"When everything is valid, you will be able to click the Submit button, which will install\nthe project."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(7383).A+"",width:"1920",height:"960"})}),"\n",(0,i.jsxs)(t.p,{children:["Adding a project through this interface runs ",(0,i.jsx)(t.code,{children:"git clone"})," in the background, same as above,\nbut will then upload all of the repository's files to the storage provider. These files will then be\ndownloaded and installed to the deployment's file system each time the docker builder\npod runs. This allows full version controlled access for local development flow\nand version locking for production deployment. The source project code will then be force-pushed\nto the branch ",(0,i.jsx)(t.code,{children:"<RELEASE_NAME>-deployment"}),", so make sure that there is no work in that branch\nthat might get overwritten, and make a backup in another branch you do want to save it."]}),"\n",(0,i.jsxs)(t.p,{children:["The Push to GitHub button will push the current code for that project to the ",(0,i.jsx)(t.code,{children:"<RELEASE_NAME>-deployment"}),"\nbranch if possible; it will ",(0,i.jsx)(t.em,{children:"never"})," push to the main branch. If there are merge conflicts, it will instead\nmake a Pull Request on that branch with the changes; it will NOT force-push anything to this branch,\nunlike adding or updating a project."]}),"\n",(0,i.jsxs)(t.p,{children:["The Update button opens the same drawer as adding a new project, just with the destination repository locked in.\nAssuming everything matches, it will also force-push to the ",(0,i.jsx)(t.code,{children:"<RELEASE_NAME>-deployment"})," branch in the destination\nrepository."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(2335).A+"",width:"1920",height:"960"})}),"\n",(0,i.jsx)(t.p,{children:"The GitHub Repo Link button also opens this drawer, but you can only select the destination repository, not\nthe source repository, and no code is pushed anywhere."}),"\n",(0,i.jsx)(t.p,{children:"The remove button will remove the folder containing that project. This will not delete the deployment\nbranch. WARNING: Any uncommitted & unpushed files will be lost."}),"\n",(0,i.jsx)(t.h3,{id:"updating-the-engine-version-and-rebuilding-projects",children:"Updating the Engine Version and Rebuilding Projects"}),"\n",(0,i.jsxs)(t.p,{children:["Making changes to a project is not always reflected immediately in the running code. As of this writing,\nproject code is built into the client-side and backend files, and changes to project code require that\nthe codebase be updated. Locally, this just requires you to stop and restart the ",(0,i.jsx)(t.code,{children:"npm run dev"})," command.\nIn a production environment, this requires that the builder process be restarted, so that it can\nrebuild the client and backend code with the new project code."]}),"\n",(0,i.jsx)(t.p,{children:"Changes to scenes in projects do not require a rebuild - since they are stored external to the codebase\nin the storage provider, and are downloaded anew by a client each time the scene is loaded, changes to\nscenes will always be immediately available. The act of saving a project will clear any cached version\nof the scene's static files, so the client will get the new version."}),"\n",(0,i.jsx)(t.p,{children:"Additionally, if you want to update the core iR Engine code, you will also need to re-run the builder\nprocess with the new version of the code."}),"\n",(0,i.jsxs)(t.p,{children:["In a production environment, click on the button ",(0,i.jsx)(t.code,{children:"Update Engine/Rebuild"}),". A drawer will open with\na selector for the engine version you want to update with. This will be an image in the builder's\nlinked image repository."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(7832).A+"",width:"1920",height:"960"})}),"\n",(0,i.jsx)(t.p,{children:"After selecting an engine version, if you click Submit now, you will just rebuild with the\nnewly-selected version of the main codebase, plus whatever versions of your projects are currently\nin your linked repositories."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(4762).A+"",width:"1920",height:"960"})}),"\n",(0,i.jsxs)(t.p,{children:["If you click on ",(0,i.jsx)(t.code,{children:"Update projects"}),",\nyou can select the source commits for any installed projects that have a destination repo, same as with\nthe Add/Update project drawer. The projects will be updated before the builder is restarted."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(7168).A+"",width:"1920",height:"960"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},7832:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/projects-admin-engine-update-select-tag-19010a5035d32028b1fe2bc108317453.png"},4762:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/projects-admin-engine-update-solo-36db6fe4b0b041ddf53b78f68aef64ac.png"},7168:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/projects-admin-engine-update-with-projects-6c4881c693916e38c4aef2ed30aa7c7b.png"},5509:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/projects-admin-install-invalid-source-fda5b3cd62b53ce1974074ea9fea62cf.png"},68:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/projects-admin-install-mismatched-projects-03be680f5576945e9e9b47e2d637cf16.png"},6008:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/projects-admin-install-new-d3d0e63451648ab1fb868b3b25b55300.png"},4024:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/projects-admin-install-project-exists-0afc37d54dcb96767edf6642e2dfd0cf.png"},1187:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/projects-admin-install-select-branch-74a06d0c9d8e4df49233974684896be1.png"},3923:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/projects-admin-install-select-tag-baa75d38d370f32587676c576de5baca.png"},7383:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/projects-admin-install-valid-submit-72370ea40fc0268f8e54e9f9f2685750.png"},2335:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/projects-admin-update-valid-submit-933ca18cc568f3829d32edecfb2dc9ff.png"},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(6540);const o={},s=i.createContext(o);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);