"use strict";(self.webpackChunk_etherealengine_docs=self.webpackChunk_etherealengine_docs||[]).push([[9424],{2277:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var o=t(4848),s=t(8453),i=t(9263),r=t(7152);const a={sidebar_label:"Physics"},l="Adding Physics",c={id:"developer/typescript/basics/physics",title:"Adding Physics",description:"So far we have learned how to create an Entity, and how to tell the engine what we want our entity to be. In simple terms, we told the engine how to create our sphere.",source:"@site/docs/developer/typescript/02_basics/02_physics.md",sourceDirName:"developer/typescript/02_basics",slug:"/developer/typescript/basics/physics",permalink:"/etherealengine-docs/es/developer/typescript/basics/physics",draft:!1,unlisted:!1,editUrl:"https://github.com/EtherealEngine/etherealengine-docs/blob/master/docs/developer/typescript/02_basics/02_physics.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Physics"},sidebar:"typescript",previous:{title:"Overview",permalink:"/etherealengine-docs/es/developer/typescript/basics/recap/next"},next:{title:"State",permalink:"/etherealengine-docs/es/developer/typescript/basics/state"}},h={},p=[{value:"Our problem",id:"our-problem",level:2},{value:"Our solution",id:"our-solution",level:2},{value:"Physics Properties",id:"physics-properties",level:2}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"adding-physics",children:"Adding Physics"}),"\n",(0,o.jsxs)(n.p,{children:["So far we have learned how to create an ",(0,o.jsx)(n.code,{children:"Entity"}),", and how to tell the engine what we want our entity to be. In simple terms, we told the engine how to ",(0,o.jsx)(n.strong,{children:"create"})," our sphere."]}),"\n",(0,o.jsx)(n.h2,{id:"our-problem",children:"Our problem"}),"\n",(0,o.jsxs)(n.p,{children:["We added some components to our sphere, so that the engine can draw the sphere into the screen and we can see it.",(0,o.jsx)(n.br,{}),"\n",'But right now it is only an "empty shell" that sits there doing nothing.',(0,o.jsx)(n.br,{}),"\n","We cannot even move it or push it around! What a boring ball.",(0,o.jsx)(n.br,{}),"\n","Lets fix that."]}),"\n",(0,o.jsx)(n.h2,{id:"our-solution",children:"Our solution"}),"\n",(0,o.jsx)(n.p,{children:"We are going to add a Collider and a RigidBody to our sphere object."}),"\n",(0,o.jsxs)(n.p,{children:["Physics properties are tricky to test, as they may not be readily visible.",(0,o.jsx)(n.br,{}),"\n","Lets get a point of reference of how our project currently behaves, so we can be certain that the changes we make to our code are working as we expect them.",(0,o.jsx)(n.br,{}),"\n","In order to do that, we are going to run our project from the studio and walk around the scene with an Avatar."]}),"\n",(0,o.jsx)(n.p,{children:"These are the steps needed to accomplish that:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Open the scene you created before, or click on ",(0,o.jsx)(n.code,{children:"Create Scene"})," if you don't have it"]}),"\n",(0,o.jsxs)(n.li,{children:["Press the ",(0,o.jsx)(n.code,{children:"Play"})," button in the studio"]}),"\n",(0,o.jsxs)(n.li,{children:["Move your Avatar around the scene by either:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Pressing ",(0,o.jsx)(n.code,{children:"WASD"})," in your keyboard"]}),"\n",(0,o.jsx)(n.li,{children:"Clicking anywhere on the ground with your mouse"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["You may notice that, if you try to hit the sphere with your avatar... you will instead walk right through it!",(0,o.jsx)(n.br,{}),"\n",'This happens because our Sphere doesn\'t have any Physics properties yet, so it can be "seen" but not "collided against".']}),"\n",(0,o.jsx)(n.h2,{id:"physics-properties",children:"Physics Properties"}),"\n",(0,o.jsx)(n.p,{children:"In order to correct our problem, we are now going to:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Add a ",(0,o.jsx)(n.code,{children:"RigidBodyComponent"})," of type ",(0,o.jsx)(n.code,{children:"dynamic"})," to our entity"]}),"\n",(0,o.jsxs)(n.li,{children:["Add a ",(0,o.jsx)(n.code,{children:"ColliderComponent"})," with the shape of a ",(0,o.jsx)(n.code,{children:"sphere"})]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Lets also change the position of ball so that it spawns some distance above the ground.",(0,o.jsx)(n.br,{}),"\n","Here are your hints for this tutorial:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"// Both the RigidBody and Collider components are part of the `Spatial/physics` engine module\n'@etherealengine/spatial/src/physics/components/.....'\n// We can specify the dynamic type with:\n{ type: 'dynamic' }\n// We can specify the shape with:\n{ shape: 'sphere' }\n// Make the ball spawn 3units above the ground\nVector3(/* X */,  /* Y */,  /* Z */)\n"})}),"\n",(0,o.jsx)(n.p,{children:"You will know that your code is correct if:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The ball has gravity and falls to the ground"}),"\n",(0,o.jsx)(n.li,{children:"You try to go through the ball with the Avatar, but the engine stops you and you push the ball instead."}),"\n"]}),"\n",(0,o.jsxs)(i.W,{title:"Solution",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"// Import both components from the Spatial/physics module\nimport { RigidBodyComponent } from '@etherealengine/spatial/src/physics/components/RigidBodyComponent'\nimport { ColliderComponent } from '@etherealengine/spatial/src/physics/components/ColliderComponent'\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"// Set both components to our entity\nECS.setComponent(entity, RigidBodyComponent, { type: 'dynamic' })\nECS.setComponent(entity, ColliderComponent, { shape: 'sphere' })\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"// Make the ball spawn 3 units along the Y axis (aka 3u above the ground)\nECS.setComponent(entity, TransformComponent, { position: new Vector3(0, 3, 0) })\n"})}),(0,o.jsx)(r.B,{title:"Full Solution",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",metastring:'title="ee-tutorial-basics/Step2.ts" showLineNumbers',children:"import { ECS } from '@etherealengine/ecs'\nimport { NameComponent } from '@etherealengine/spatial/src/common/NameComponent'\nimport { VisibleComponent } from '@etherealengine/spatial/src/renderer/components/VisibleComponent'\nimport { TransformComponent } from '@etherealengine/spatial/src/transform/components/TransformComponent'\nimport { PrimitiveGeometryComponent } from '@etherealengine/engine/src/scene/components/PrimitiveGeometryComponent'\nimport { Vector3 } from 'three'\nimport { GeometryTypeEnum } from '@etherealengine/engine/src/scene/constants/GeometryTypeEnum'\nimport { PhysicsSystem } from '@etherealengine/spatial'\n// Import both components from the Spatial/physics module\n//highlight-start\nimport { RigidBodyComponent } from '@etherealengine/spatial/src/physics/components/RigidBodyComponent'\nimport { ColliderComponent } from '@etherealengine/spatial/src/physics/components/ColliderComponent'\n//highlight-end\n\nexport const BasicsComponent = ECS.defineComponent({\n  name: 'ee.tutorial.BasicsComponent',\n  jsonID: 'EE_tutorial_basics',\n  onInit: () => { return { initialized: false } }\n})\n\nconst basicsQuery = ECS.defineQuery([BasicsComponent])\n\nexport const BasicsSystem = ECS.defineSystem({\n  uuid: 'ee.tutorial.BasicsSystem',\n  execute: () => {\n    for (const entity of basicsQuery()) {\n      let { initialized } = ECS.getMutableComponent(entity, BasicsComponent)\n      if (initialized.value) continue\n      initialized.set(true)\n\n      ECS.setComponent(entity, NameComponent, 'ee.tutorial.basics-entity')\n      ECS.setComponent(entity, VisibleComponent)\n      // Make the ball spawn 3 units along the Y axis (aka 3u above the ground)\n      //highlight-start\n      ECS.setComponent(entity, TransformComponent, { position: new Vector3(0, 3, 0) })\n      //highlight-end\n      ECS.setComponent(entity, PrimitiveGeometryComponent, { geometryType: GeometryTypeEnum.SphereGeometry })\n      // Set both components to our entity\n      //highlight-start\n      ECS.setComponent(entity, RigidBodyComponent, { type: 'dynamic' })\n      ECS.setComponent(entity, ColliderComponent, { shape: 'sphere' })\n      //highlight-end\n    }\n  },\n  insert: { after: PhysicsSystem }\n})\n"})})})]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},9263:(e,n,t)=>{t.d(n,{W:()=>i});var o=t(6540),s=t(4848);const i=e=>{const n=e.title?e.title:"Technical Note";return(0,s.jsx)(o.Fragment,{children:(0,s.jsxs)("details",{className:"alert alert--secondary mb-5 bg-neutral-900",children:[(0,s.jsx)("summary",{className:"text-blue-200 hover:cursor-pointer",children:n}),(0,s.jsx)("div",{className:"pt-4",children:e.children})]})})}},7152:(e,n,t)=>{t.d(n,{B:()=>i});var o=t(6540),s=t(4848);const i=e=>{const n=e.title;return(0,s.jsx)(o.Fragment,{children:(0,s.jsxs)("details",{className:"mb-5",children:[(0,s.jsx)("summary",{className:"text-blue-200 hover:cursor-pointer",children:n}),(0,s.jsx)("div",{className:"pt-4",children:e.children})]})})}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(6540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);