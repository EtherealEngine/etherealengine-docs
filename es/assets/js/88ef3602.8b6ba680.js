"use strict";(self.webpackChunk_etherealengine_docs=self.webpackChunk_etherealengine_docs||[]).push([[9487],{5552:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=n(4848),o=n(8453);const a={},s="Email Service",l={id:"manual/modules/infrastructure/devopsDeployment/AWSSetup/email",title:"Email Service",description:"Set up Simple Email Service (optional)",source:"@site/docs/manual/03_modules/05_infrastructure/03_devopsDeployment/03_AWSSetup/09_email.md",sourceDirName:"manual/03_modules/05_infrastructure/03_devopsDeployment/03_AWSSetup",slug:"/manual/modules/infrastructure/devopsDeployment/AWSSetup/email",permalink:"/etherealengine-docs/es/manual/modules/infrastructure/devopsDeployment/AWSSetup/email",draft:!1,unlisted:!1,editUrl:"https://github.com/EtherealEngine/etherealengine-docs/blob/master/docs/manual/03_modules/05_infrastructure/03_devopsDeployment/03_AWSSetup/09_email.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"manual",previous:{title:"Agones, ingress-nginx and Redis",permalink:"/etherealengine-docs/es/manual/modules/infrastructure/devopsDeployment/AWSSetup/agonesNginxRedis"},next:{title:"Notification Service",permalink:"/etherealengine-docs/es/manual/modules/infrastructure/devopsDeployment/AWSSetup/notifications"}},r={},d=[{value:"Set up Simple Email Service (optional)",id:"set-up-simple-email-service-optional",level:2},{value:"Create SMTP credentials",id:"create-smtp-credentials",level:3},{value:"Move SES out of Sandbox",id:"move-ses-out-of-sandbox",level:3},{value:"Verifying test emails",id:"verifying-test-emails",level:4}];function c(e){const t={h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"email-service",children:"Email Service"}),"\n",(0,i.jsx)(t.h2,{id:"set-up-simple-email-service-optional",children:"Set up Simple Email Service (optional)"}),"\n",(0,i.jsx)(t.p,{children:"If you want to enable email magiclink login, you will need to set up Simple Email Service (SES)."}),"\n",(0,i.jsx)(t.p,{children:"In the AWS web client, go to SES -> Configuration -> Verified Identities. Click Create Identity, then under 'Identity type'\nselect 'Domain'. Enter the top-level domain under the 'Domain' field. Finally, click the 'Create identity' button."}),"\n",(0,i.jsx)(t.h3,{id:"create-smtp-credentials",children:"Create SMTP credentials"}),"\n",(0,i.jsx)(t.p,{children:"You need to create SMTP credentials in order to authorize SES. These will show up as an IAM user,\nbut you must go through an SES-specific process to get valid credentials; just creating an IAM user\nwith SESFullAccess will not work."}),"\n",(0,i.jsx)(t.p,{children:"Go to an SES page and select 'SMTP Settings', then click the button 'Create SMTP Credentials'.\nYou can leave the default IAM User Name as-is; click the Create button. You should be taken to a screen\nsays a user has been created successfully. Click on 'Show User SMTP Security Credentials'."}),"\n",(0,i.jsx)(t.p,{children:"You will see a Username and Password. These credentials will go into the Helm config file, under\nAWS_SMTP_USER and AWS_SMTP_PASS, respectively. You must also fill in the region that you've created these credentials\nin, replacing <SES_REGION> in api.extraEnv.SMTP_HOST."}),"\n",(0,i.jsx)(t.h3,{id:"move-ses-out-of-sandbox",children:"Move SES out of Sandbox"}),"\n",(0,i.jsx)(t.p,{children:"By default, SES domains are in Sandbox mode, where they can only send emails to verified email addresses.\nTo request that the domain be moved out of Sandbox mode, go to SES->Email Sending->Sending Statistics.\nClick on the button 'Edit your account details' to open the modal. Set 'Enable Production Access' to Yes,\nleave Mail type on 'Transactional', then fill in the Website URL, add a Use case description (basically\njust assure them that this is for account login only, not anything else), click the checkbox to agree\nto their TOD, and click the button 'Submit for review'."}),"\n",(0,i.jsx)(t.p,{children:"It may take up to a few days for them to take action. If the request is rejected, address their concerns.\nOnce you have been approved, email login should work for any email address."}),"\n",(0,i.jsx)(t.h4,{id:"verifying-test-emails",children:"Verifying test emails"}),"\n",(0,i.jsx)(t.p,{children:"Before you have production use for your SES domain, in order to log in you'll have to verify specific email\naddresses with SES. Go to SES->Identity Management->Email Addresses. Click on the button 'Verify a New Email\nAddress'. Enter the address you want to test with, then click 'Verify This Email Address'. You should soon\nreceive an email with a link to verify it (it may go to your Spam folder). Once you've followed the link,\nyou can log in with that address."})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var i=n(6540);const o={},a=i.createContext(o);function s(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);