"use strict";(self.webpackChunk_etherealengine_docs=self.webpackChunk_etherealengine_docs||[]).push([[2345],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),h=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=h(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=h(n),d=o,g=p["".concat(l,".").concat(d)]||p[d]||c[d]||i;return n?a.createElement(g,r(r({ref:t},u),{},{components:n})):a.createElement(g,r({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,r[1]=s;for(var h=2;h<i;h++)r[h]=n[h];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3686:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>h});var a=n(7462),o=(n(7294),n(3905));const i={},r="How to set up GitHub to install external projects",s={unversionedId:"host/devops_deployment/setup_github_oauth_for_projects",id:"host/devops_deployment/setup_github_oauth_for_projects",title:"How to set up GitHub to install external projects",description:"Ethereal Engine is extensible via Projects, which can contain",source:"@site/docs/1_host/2_devops_deployment/4_setup_github_oauth_for_projects.md",sourceDirName:"1_host/2_devops_deployment",slug:"/host/devops_deployment/setup_github_oauth_for_projects",permalink:"/etherealengine-docs/es/docs/host/devops_deployment/setup_github_oauth_for_projects",draft:!1,editUrl:"https://github.com/EtherealEngine/etherealengine-docs/blob/master/docs/1_host/2_devops_deployment/4_setup_github_oauth_for_projects.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Database Migrations",permalink:"/etherealengine-docs/es/docs/host/devops_deployment/database_migrations"},next:{title:"Cluster Management",permalink:"/etherealengine-docs/es/docs/host/devops_deployment/managing_remote_kubernetes"}},l={},h=[{value:"Create a GitHub OAuth App in an organization, or your user",id:"create-a-github-oauth-app-in-an-organization-or-your-user",level:2},{value:"Create client secret, note Client ID",id:"create-client-secret-note-client-id",level:2},{value:"Make note of Client ID",id:"make-note-of-client-id",level:3},{value:"Generate client secret",id:"generate-client-secret",level:3},{value:"Configure Ethereal Engine deployment with IDs/keys",id:"configure-ethereal-engine-deployment-with-idskeys",level:2},{value:"Pre-initial installation",id:"pre-initial-installation",level:3},{value:"Post-installation, if you have another authentication method configured",id:"post-installation-if-you-have-another-authentication-method-configured",level:3},{value:"Post-installation, if you do not have any authentication method configured",id:"post-installation-if-you-do-not-have-any-authentication-method-configured",level:3},{value:"Setting up GitHub webhook",id:"setting-up-github-webhook",level:2}],u={toc:h},p="wrapper";function c(e){let{components:t,...i}=e;return(0,o.kt)(p,(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-set-up-github-to-install-external-projects"},"How to set up GitHub to install external projects"),(0,o.kt)("p",null,"Ethereal Engine is extensible via ",(0,o.kt)("a",{parentName:"p",href:"../3_concepts/1_projects_api.md"},"Projects"),", which can contain\nnew scenes, new avatars, new static resources, additional code, and more. Ethereal Engine integrates\nwith GitHub to push and pull projects for backup and restoration, and one can also install existing\nprojects from GitHub. In order to install projects from private repositories, or to push local project\nchanges to a GitHub repo, an OAuth app from GitHub (not a GitHub app, that is something different) needs to be\ncreated, and the logged-in user must be connected in Ethereal Engine to GitHub (i.e. must have logged in via\nGitHub at some point) and have permission to access the source and destination repositories."),(0,o.kt)("p",null,"Note that it is recommended that you complete most of this before the initial installation of\nyour deployment, so that you can log in via GitHub and be granted admin status as the first\nlogged-in user. If you do not, then you will either need to manually insert some of these values\ninto the database so that you can log yourself in; have another log method configured already\nand use that logged-in admin user; or reset the database with these values configured in the\nupdated Helm configuration that is used for the reset."),(0,o.kt)("h2",{id:"create-a-github-oauth-app-in-an-organization-or-your-user"},"Create a GitHub OAuth App in an organization, or your user"),(0,o.kt)("p",null,"You can either create an OAuth App for your personal GitHub account or for an organization that\nyou have sufficient permissions on. Either will work for this setup."),(0,o.kt)("p",null,"The general instructions for doing this can be found ",(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app"},"here"),".\nThe specifics you'll need to enter are as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Application name: Anything you want"),(0,o.kt)("li",{parentName:"ul"},"Homepage URL: Whatever you want, this is just what is linked to from the OAuth authorization page"),(0,o.kt)("li",{parentName:"ul"},"Authorization callback URL: enter ",(0,o.kt)("inlineCode",{parentName:"li"},"https://api.<domain>/oauth/github/callback"),", e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"https://api.example.com/oauth/github/callback"),". ^ "),(0,o.kt)("li",{parentName:"ul"},"Enable Device Flow: Leave unchecked")),(0,o.kt)("p",null,"^If you are running this locally off of localhost, this should be ",(0,o.kt)("inlineCode",{parentName:"p"},"https://localhost:3030/oauth/github/callback"),".\nIf you are using an explicit IP address instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost"),", then use that IP address here, but keep the ",(0,o.kt)("inlineCode",{parentName:"p"},":3030"),",\nas that is the port that the API server runs on, and GitHub needs to call back to the API server."),(0,o.kt)("h2",{id:"create-client-secret-note-client-id"},"Create client secret, note Client ID"),(0,o.kt)("p",null,"Once the app has been created, you will be redirected to the General settings for it.\nHere, you will generate one credential for the app, so that your deployment can be authenticated."),(0,o.kt)("h3",{id:"make-note-of-client-id"},"Make note of Client ID"),(0,o.kt)("p",null,"Near the top of this page is the Client ID for the app. This is a public ID for the app.\nIt will be used when configuring Ethereal Engine."),(0,o.kt)("h3",{id:"generate-client-secret"},"Generate client secret"),(0,o.kt)("p",null,"Below ",(0,o.kt)("inlineCode",{parentName:"p"},"Client ID")," is a section ",(0,o.kt)("inlineCode",{parentName:"p"},"Client secrets"),". None are created by default, so click the\nbutton ",(0,o.kt)("inlineCode",{parentName:"p"},"Generate a new client secret"),". As the notifications that appear say, you will only see the\nfull secret right now, so copy it somewhere retrievable (but not anywhere publicly accessible). If\nyou ever lose the secret, you can always generate a new one."),(0,o.kt)("h2",{id:"configure-ethereal-engine-deployment-with-idskeys"},"Configure Ethereal Engine deployment with IDs/keys"),(0,o.kt)("h3",{id:"pre-initial-installation"},"Pre-initial installation"),(0,o.kt)("p",null,"If you have not done the initial installation/deployment yet, then you can add most of the values\nabove to the Helm configuration, and they will be inserted into the database so that GitHub login\nis enabled from the start, and you can then log in via GitHub and be granted admin status."),(0,o.kt)("p",null,"Enter the Client ID for ",(0,o.kt)("inlineCode",{parentName:"p"},"GITHUB_CLIENT_ID"),", and the Client secret for\n",(0,o.kt)("inlineCode",{parentName:"p"},"GITHUB_CLIENT SECRET")," in the section ",(0,o.kt)("inlineCode",{parentName:"p"},"api.extraEnv"),". It is advised that you enclose all of these in\ndouble quotes in the .yaml file, so that they are interpreted as strings even if they start with a\nnumber, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},'GITHUB_CLIENT_ID: "17592577832789234"')," If you see ",(0,o.kt)("inlineCode",{parentName:"p"},"GITHUB_APP_ID"),", it is not used;\nit is left over from a prior implementation of GitHub Apps, which no longer works."),(0,o.kt)("p",null,"Continue with the setup instructions. When you run ",(0,o.kt)("inlineCode",{parentName:"p"},"helm install")," with your configuration file, the\nGitHub credentials will be included."),(0,o.kt)("h3",{id:"post-installation-if-you-have-another-authentication-method-configured"},"Post-installation, if you have another authentication method configured"),(0,o.kt)("p",null,"If you have already installed the platform but configured it with another login method, such as\nemail or another OAuth provider, then log in as an admin user. If you haven't logged in with anything\nyet, then the first user that logs in will be made an admin."),(0,o.kt)("p",null,"Go to ",(0,o.kt)("inlineCode",{parentName:"p"},"/admin/settings"),". Click on the ",(0,o.kt)("inlineCode",{parentName:"p"},"Authentication")," selector. A page should open with a\nsection ",(0,o.kt)("inlineCode",{parentName:"p"},"OAuth")," that takes up the bottom two-thirds. Under ",(0,o.kt)("inlineCode",{parentName:"p"},"GitHub"),", enter\nthe Client ID under ",(0,o.kt)("inlineCode",{parentName:"p"},"Key")," and the Client Secret under ",(0,o.kt)("inlineCode",{parentName:"p"},"Secret"),". Click the Save button at the bottom."),(0,o.kt)("h3",{id:"post-installation-if-you-do-not-have-any-authentication-method-configured"},"Post-installation, if you do not have any authentication method configured"),(0,o.kt)("p",null,"If you have already set up the platform but did not configure any authentication method,\nthen you are in a bit of a bind where you can't log in to get admin privileges, but need admin\nprivileges to configure an authentication method. The way around this is to reset the database\nand provide the GitHub credentials as part of this process - this is similar to what would happen\non initial installation. Note that this will erase anything you've done so far, but without any\nadmins, the most you'd have been likely to do is change some guest users' avatars."),(0,o.kt)("p",null,"Open your Helm configuration. Enter the Client ID for ",(0,o.kt)("inlineCode",{parentName:"p"},"GITHUB_CLIENT_ID")," and the Client secret for\n",(0,o.kt)("inlineCode",{parentName:"p"},"GITHUB_CLIENT SECRET")," in the section ",(0,o.kt)("inlineCode",{parentName:"p"},"api.extraEnv"),". It is advised that you enclose all of these in\ndouble quotes in the .yaml file, so that they are interpreted as strings even if they start with a\nnumber, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},'GITHUB_CLIENT_ID: "17592577832789234"')),(0,o.kt)("p",null,"Next, run ",(0,o.kt)("inlineCode",{parentName:"p"},"helm upgrade --reuse-values -f <path/to/configuration.yaml> --set-string api.extraEnv.FORCE_DB_REFRESH=true <stage_name> etherealengine/etherealengine"),".\nThis tells Helm to restart the API servers, and for them to wipe the database and reseed it with the values\nin the configuration file. It should only take a minute or two, and you should then run\n",(0,o.kt)("inlineCode",{parentName:"p"},"helm upgrade --reuse-values --set-string api.extraEnv.FORCE_DB_REFRESH=false <stage_name> etherealengine/etherealengine")," to unset\nthe flag telling it to reset the database."),(0,o.kt)("p",null,"Once this is done, you should be able to log in with GitHub and be granted admin status."),(0,o.kt)("h1",{id:"logging-in-with-github-and-granting-access-to-other-organizations"},"Logging in with GitHub and Granting Access to Other Organizations"),(0,o.kt)("p",null,"When you log in with GitHub, you will be asked to grant access to your user information as well as the repositories\nthat the OAuth app has authorized for. Ethereal Engine will have access to your personal repositories and,\nif the OAuth app was created in a GitHub organization, all repositories in that organization. It will not\nhave inherent push access to other organizations' repositories or pull access to their private repositories."),(0,o.kt)("p",null,"There are two ways to grant access to other repositories. When you are first signing in via GitHub and are\npresented with the screen to authorize the OAuth app's permissions, you should see a section near the bottom\nthat shows all of the organizations you are in. If you have admin rights to that organization, you can Grant\naccess. If you do not have admin rights, then you can Request access, and someone who does have admin rights\nwill have to approve it."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(1413).Z,width:"638",height:"1162"})),(0,o.kt)("p",null,"If you have already gone through the OAuth approval page, it will not be shown again - all subsequent logins\nwill bypass this page",(0,o.kt)("sup",{parentName:"p",id:"fnref-1"},(0,o.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),". In order to grant the OAuth app access to other organizations, follow\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/organizations/managing-oauth-access-to-your-organizations-data/approving-oauth-apps-for-your-organization"},"these steps")),(0,o.kt)("p",null,"In short form:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/settings/applications"},"https://github.com/settings/applications"),")"),(0,o.kt)("li",{parentName:"ol"},"Click on the name of the OAuth app installed in Ethereal Engine"),(0,o.kt)("li",{parentName:"ol"},"Under ",(0,o.kt)("inlineCode",{parentName:"li"},"Organization access"),", click on Grant/Request for the organizations you want Ethereal Engine to\nhave access to")),(0,o.kt)("h1",{id:"installing-ethereal-engine-projects-from-github"},"Installing Ethereal Engine projects from GitHub"),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"../3_concepts/1_projects_api.md"},"the section 'Graphical Install Flow")," for more information on how to install\nprojects from GitHub."),(0,o.kt)("h1",{id:"user-repo-access-to-github-with-optional-webhooks"},"User Repo Access to GitHub (with optional webhooks)"),(0,o.kt)("p",null,"Users can push projects to GitHub if they have write/maintain/admin access to the associated GitHub repository.\nSince fetching this access from the GitHub API every time a user fetches their projects can take a noticeable\namount of time, Ethereal Engine stores users' GitHub repo access in its database. This is much faster to access."),(0,o.kt)("p",null,"There are multiple actions that will make the engine re-fetch and update users' repo access:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"When a user logs in via GitHub"),(0,o.kt)("li",{parentName:"ul"},'When a user clicks on the button "Refresh GitHub Repo Access" on /admin/projects or /studio (must be logged\nin as a user that is associated with a GitHub account)'),(0,o.kt)("li",{parentName:"ul"},"Via a GitHub webhook - must manually configure this")),(0,o.kt)("h2",{id:"setting-up-github-webhook"},"Setting up GitHub webhook"),(0,o.kt)("p",null,"Ethereal Engine currently only supports webhook notifications for Collaborators being added/edited/removed.\nChanges in Teams are not handled by Ethereal Engine due to the opacity of team members. (Team change webhooks do not\ninclude team members, and the engine does not track who is in a team)"),(0,o.kt)("p",null,"An admin needs to go to /admin/settings, click on 'Server', then enter a secret key in the field\n\"GitHub Webhook Secret\", then click the Save button. The secret can be any string you make up.\nRandomly generated strings are encouraged."),(0,o.kt)("p",null,'Next, go to GitGub. In the Repository or Organization that you want to send updates for, go to\nSettings -> Code(, planning,) and automation -> Webhooks, then click "Add webhook".'),(0,o.kt)("p",null,"For Payload URL, enter ",(0,o.kt)("inlineCode",{parentName:"p"},"<your_api_subdomain>/github-repo-access-webhook"),", e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"https://api.example.com/github-repo-access-webhook"),"\nSet Content Type to ",(0,o.kt)("inlineCode",{parentName:"p"},"application/json"),'. For Secret, enter the secret from the earlier step. For\n"Which events would you like to trigger this webhook?", select "Let me select individual events."\nIn the list of events that appears, uncheck "Pushes", anf check "Collaborator add, remove, or changed".\nAt the very bottom of the page, click the green button "Add webhook".'),(0,o.kt)("p",null,'After the webhook is created, the webhook will send a ping request to the API endpoint you provided. If the URL\nwas entered correctly, and the secret was entered correctly in both ends, the ping should get a 200 response.\nYou can check the status under the "Recent Deliveries" tab of that webhook on GitHub.'),(0,o.kt)("p",null,"When this is working, whenever a user is added, removed, or has their access modified, the engine\nwill re-fetch the user's full set of GitHub repo accesses and update the database's records."))}c.isMDXComponent=!0},1413:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/oauth-login-screen-544efd6284a12360ec3f7e1498a8a48a.png"}}]);