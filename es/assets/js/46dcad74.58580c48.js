"use strict";(self.webpackChunk_etherealengine_docs=self.webpackChunk_etherealengine_docs||[]).push([[5520],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>k});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=a,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return t?r.createElement(k,i(i({ref:n},p),{},{components:t})):r.createElement(k,i({ref:n},p))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6506:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const o={},i="Troubleshooting",l={unversionedId:"host/installation/install_troubleshooting",id:"host/installation/install_troubleshooting",title:"Troubleshooting",description:"Browser Debug",source:"@site/docs/1_host/1_installation/6_install_troubleshooting.md",sourceDirName:"1_host/1_installation",slug:"/host/installation/install_troubleshooting",permalink:"/etherealengine-docs/es/docs/host/installation/install_troubleshooting",draft:!1,editUrl:"https://github.com/EtherealEngine/etherealengine-docs/blob/master/docs/1_host/1_installation/6_install_troubleshooting.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Running on Static IP under WSL2",permalink:"/etherealengine-docs/es/docs/host/installation/running_on_static_IP"},next:{title:"Old Docker Instructions",permalink:"/etherealengine-docs/es/docs/host/installation/docker"}},s={},c=[{value:"Browser Debug",id:"browser-debug",level:3},{value:"Invalid Certificate errors in local environment",id:"invalid-certificate-errors-in-local-environment",level:3},{value:"Allow instanceserver address connection via installing local Certificate Authority",id:"allow-instanceserver-address-connection-via-installing-local-certificate-authority",level:3},{value:"Allow local file http-server connection with invalid certificate",id:"allow-local-file-http-server-connection-with-invalid-certificate",level:3},{value:"Allow instanceserver address connection with invalid certificate",id:"allow-instanceserver-address-connection-with-invalid-certificate",level:3},{value:"AccessDenied connecting to mariadb",id:"accessdenied-connecting-to-mariadb",level:3},{value:"Error: listen EADDRINUSE :::3030",id:"error-listen-eaddrinuse-3030",level:3},{value:"&#39;CORS error&#39; in terminal",id:"cors-error-in-terminal",level:3},{value:"Default blank screen",id:"default-blank-screen",level:3},{value:"Instanceserver or resource loading error?",id:"instanceserver-or-resource-loading-error",level:3},{value:"To install a new package for editor react components in monorepo",id:"to-install-a-new-package-for-editor-react-components-in-monorepo",level:3},{value:"Using Local Storage instead of MinIO",id:"using-local-storage-instead-of-minio",level:3},{value:"Accessing MinIO S3 storage provider running in local docker",id:"accessing-minio-s3-storage-provider-running-in-local-docker",level:3},{value:"Clear all data from MinIO S3 storage provider running in local docker",id:"clear-all-data-from-minio-s3-storage-provider-running-in-local-docker",level:3},{value:"DB not seeding routes (E.g. Error: No project installed- please contact site admin)",id:"db-not-seeding-routes-eg-error-no-project-installed--please-contact-site-admin",level:3},{value:"Weird issues with your database?",id:"weird-issues-with-your-database",level:3}],p={toc:c},d="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"troubleshooting"},"Troubleshooting"),(0,a.kt)("h3",{id:"browser-debug"},"Browser Debug"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"p key")," debug colliders view"),(0,a.kt)("h3",{id:"invalid-certificate-errors-in-local-environment"},"Invalid Certificate errors in local environment"),(0,a.kt)("p",null,"As of this writing, the cert provided in the ethereal engine package for local use\nis not adequately signed. Browsers will throw up warnings about going to insecure pages.\nYou should be able to tell the browser to ignore it, usually by clicking on some sort\nof 'advanced options' button or link and then something along the lines of 'go there anyway'."),(0,a.kt)("p",null,"Chrome sometimes does not show a clickable option on the warning. If so, just\ntype ",(0,a.kt)("inlineCode",{parentName:"p"},"badidea")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"thisisunsafe")," when on that page. You don't enter that into the\naddress bar or into a text box, Chrome is just passively listening for those commands."),(0,a.kt)("h3",{id:"allow-instanceserver-address-connection-via-installing-local-certificate-authority"},"Allow instanceserver address connection via installing local Certificate Authority"),(0,a.kt)("p",null,"For more detailed instructions check: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/FiloSottile/mkcert"},"https://github.com/FiloSottile/mkcert")),(0,a.kt)("p",null,"Short version (common for development process on Ubuntu):"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Execute ",(0,a.kt)("inlineCode",{parentName:"li"},"sudo apt install libnss3-tools")),(0,a.kt)("li",{parentName:"ol"},"Execute ",(0,a.kt)("inlineCode",{parentName:"li"},"brew install mkcert")," (if you don't have brew, check it's page: ",(0,a.kt)("a",{parentName:"li",href:"https://brew.sh/"},"https://brew.sh/"),")"),(0,a.kt)("li",{parentName:"ol"},"Execute ",(0,a.kt)("inlineCode",{parentName:"li"},"mkcert --install")),(0,a.kt)("li",{parentName:"ol"},"Navigate to ",(0,a.kt)("inlineCode",{parentName:"li"},"./certs")," folder"),(0,a.kt)("li",{parentName:"ol"},"Execute ",(0,a.kt)("inlineCode",{parentName:"li"},"mkcert -key-file key.pem -cert-file cert.pem localhost 127.0.0.1 ::1"))),(0,a.kt)("h3",{id:"allow-local-file-http-server-connection-with-invalid-certificate"},"Allow local file http-server connection with invalid certificate"),(0,a.kt)("p",null,"Open the developer tools in your browser by pressing ",(0,a.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+i")," at the\nsame time. Go to the 'Console' tab and look at the message history. If there are\nred errors that say something like\n",(0,a.kt)("inlineCode",{parentName:"p"},"GET https://127.0.0.1:3030/socket.io/?EIO=3&transport=polling&t=NXlZLTa net::ERR_CERT_AUTHORITY_INVALID"),",\nthen right-click that URL, then select 'Open in new tab', and accept the invalid certificate."),(0,a.kt)("h3",{id:"allow-instanceserver-address-connection-with-invalid-certificate"},"Allow instanceserver address connection with invalid certificate"),(0,a.kt)("p",null,"The instanceserver functionality is hosted on an address other than 127.0.0.1 in the local\nenvironment. Accepting an invalid certificate for 127.0.0.1 will not apply to this address.\nOpen the dev console for Chrome/Firefox by pressing ",(0,a.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+i")," simultaneously, and\ngo to the Console or Network tabs."),(0,a.kt)("p",null,"If you see errors about not being able to connect to\nsomething like ",(0,a.kt)("inlineCode",{parentName:"p"},"https://192.168.0.81:3031/socket.io/?location=<foobar>"),", right click on\nthat URL and open it in a new tab. You should again get a warning page about an invalid\ncertificate, and you again need to allow it.  "),(0,a.kt)("h3",{id:"accessdenied-connecting-to-mariadb"},"AccessDenied connecting to mariadb"),(0,a.kt)("p",null,"Make sure you don't have another instance of mariadb running on port 3306"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"lsof -i :3306\n")),(0,a.kt)("p",null,"On Linux, you can also check if any processes are running on port 3306 with\n",(0,a.kt)("inlineCode",{parentName:"p"},"sudo netstat -utlp | grep 3306"),"\nThe last column should look like ",(0,a.kt)("inlineCode",{parentName:"p"},"<ID>/<something"),"\nYou can kill any running process with ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo kill <ID>")),(0,a.kt)("h3",{id:"error-listen-eaddrinuse-3030"},"Error: listen EADDRINUSE :::3030"),(0,a.kt)("p",null,"Check which process is using port 3030 and kill"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"killall -9 node \n")),(0,a.kt)("p",null,"Or"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"lsof -i :3030\nkill -3 <proccessIDfromPreviousCommand>\n")),(0,a.kt)("h3",{id:"cors-error-in-terminal"},"'CORS error' in terminal"),(0,a.kt)("p",null,"Try accessing the page using ",(0,a.kt)("inlineCode",{parentName:"p"},"https://localhost:3000"),"\ninstead of ",(0,a.kt)("inlineCode",{parentName:"p"},"https://127.0.0.1:3000")),(0,a.kt)("h3",{id:"default-blank-screen"},"Default blank screen"),(0,a.kt)("p",null,"Try typing ",(0,a.kt)("inlineCode",{parentName:"p"},"\u201cthisisunsafe\u201d")," or ",(0,a.kt)("inlineCode",{parentName:"p"},'"iknowwhatiamdoing"')," then reload page"),(0,a.kt)("h3",{id:"instanceserver-or-resource-loading-error"},"Instanceserver or resource loading error?"),(0,a.kt)("p",null,"Open dev console, click on the GET link in new tab and  accept certificate by\ntyping ",(0,a.kt)("inlineCode",{parentName:"p"},"thisisunsafe\u201d")," or ",(0,a.kt)("inlineCode",{parentName:"p"},'"iknowwhatiamdoing"')," then reload original page"),(0,a.kt)("h3",{id:"to-install-a-new-package-for-editor-react-components-in-monorepo"},"To install a new package for editor react components in monorepo"),(0,a.kt)("p",null,"Type in terminal"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"     npm i <packagename> -w @etherealengine/editor\n")),(0,a.kt)("h3",{id:"using-local-storage-instead-of-minio"},"Using Local Storage instead of MinIO"),(0,a.kt)("p",null,"Currently MinIO is used as default storage for local development. If you want to use local storage then do following steps:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"set ",(0,a.kt)("inlineCode",{parentName:"li"},"VITE_FILE_SERVER")," to the commented values under ",(0,a.kt)("inlineCode",{parentName:"li"},"# Use following value for local file server")," and comment out the values above it."),(0,a.kt)("li",{parentName:"ul"},"set ",(0,a.kt)("inlineCode",{parentName:"li"},"STORAGE_PROVIDER")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"local"))),(0,a.kt)("h3",{id:"accessing-minio-s3-storage-provider-running-in-local-docker"},"Accessing MinIO S3 storage provider running in local docker"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Using ",(0,a.kt)("a",{parentName:"strong",href:"https://min.io/docs/minio/linux/administration/minio-console.html"},"MinIO Console"),":")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"When MinIO contain is running in your docker, navigate to ",(0,a.kt)("a",{parentName:"p",href:"https://localhost:9001/"},"https://localhost:9001/")," in your browser."),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"Make sure to accept invalid certificate warning."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Login using username as ",(0,a.kt)("inlineCode",{parentName:"p"},"server")," and password as ",(0,a.kt)("inlineCode",{parentName:"p"},"password"),"."),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"You can find these credentials in ",(0,a.kt)("inlineCode",{parentName:"p"},"scripts/docker-compose.yml")," as ",(0,a.kt)("inlineCode",{parentName:"p"},"MINIO_ROOT_USER")," & ",(0,a.kt)("inlineCode",{parentName:"p"},"MINIO_ROOT_PASSWORD"))))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Using ",(0,a.kt)("a",{parentName:"strong",href:"https://s3browser.com/"},"S3 Browser")," (Windows Only):")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Download & install S3 Browser from ",(0,a.kt)("a",{parentName:"li",href:"https://s3browser.com/download.aspx"},"https://s3browser.com/download.aspx"),"."),(0,a.kt)("li",{parentName:"ul"},"Launch and connect using following details:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Account Type: ",(0,a.kt)("strong",{parentName:"li"},"S3 Compatible Storage")),(0,a.kt)("li",{parentName:"ul"},"REST Endpoint: ",(0,a.kt)("strong",{parentName:"li"},"127.0.0.1:9000")),(0,a.kt)("li",{parentName:"ul"},"Access Key ID: ",(0,a.kt)("strong",{parentName:"li"},"server")),(0,a.kt)("li",{parentName:"ul"},"Secret Access Key: ",(0,a.kt)("strong",{parentName:"li"},"password")),(0,a.kt)("li",{parentName:"ul"},"Use secure transfer (SSL/TLS): ",(0,a.kt)("strong",{parentName:"li"},"Check / On / True"))))),(0,a.kt)("h3",{id:"clear-all-data-from-minio-s3-storage-provider-running-in-local-docker"},"Clear all data from MinIO S3 storage provider running in local docker"),(0,a.kt)("p",null,"Run following commands in your terminal:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  docker container stop etherealengine_minio_s3\n  docker container rm etherealengine_minio_s3\n  docker container prune --force\n  docker volume prune --force\n  npm run dev-docker\n  npm run dev-reinit\n")),(0,a.kt)("h3",{id:"db-not-seeding-routes-eg-error-no-project-installed--please-contact-site-admin"},"DB not seeding routes (E.g. Error: No project installed- please contact site admin)"),(0,a.kt)("p",null,"Try"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  npm run dev-reinit \n")),(0,a.kt)("p",null,"or"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  docker container stop etherealengine_db\n  docker container rm etherealengine_db\n  docker container prune --force\n  npm run dev-docker\n  npm run dev-reinit\n")),(0,a.kt)("h3",{id:"weird-issues-with-your-database"},"Weird issues with your database?"),(0,a.kt)("p",null,"Try"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm run dev-reinit\n")),(0,a.kt)("p",null,"Or if on windows"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm run dev-reinit-windows\n")))}u.isMDXComponent=!0}}]);