"use strict";(self.webpackChunk_etherealengine_docs=self.webpackChunk_etherealengine_docs||[]).push([[5572],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,g=u["".concat(i,".").concat(d)]||u[d]||h[d]||l;return t?r.createElement(g,o(o({ref:n},p),{},{components:t})):r.createElement(g,o({ref:n},p))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<l;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8050:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const l={},o="Logging with Opensearch on Docker",s={unversionedId:"host/installation/opensearch",id:"host/installation/opensearch",title:"Logging with Opensearch on Docker",description:"If you want to quickstart with detailed logging using opensearch, Please follow this guide.",source:"@site/docs/1_host/1_installation/8_opensearch.md",sourceDirName:"1_host/1_installation",slug:"/host/installation/opensearch",permalink:"/etherealengine-docs/es/docs/host/installation/opensearch",draft:!1,editUrl:"https://github.com/EtherealEngine/etherealengine-docs/blob/master/docs/1_host/1_installation/8_opensearch.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Old Docker Instructions",permalink:"/etherealengine-docs/es/docs/host/installation/docker"},next:{title:"Deployment",permalink:"/etherealengine-docs/es/docs/host/devops_deployment/"}},i={},c=[{value:"Setup Opensearch on Docker locally",id:"setup-opensearch-on-docker-locally",level:2},{value:"Pull OpenSearch Images",id:"pull-opensearch-images",level:3},{value:"OpenSearch",id:"opensearch",level:4},{value:"OpenSearch Dashboard",id:"opensearch-dashboard",level:4},{value:"Start Opensearch Containers",id:"start-opensearch-containers",level:3},{value:"OpenSearch",id:"opensearch-1",level:4},{value:"OpenSearch Dashboard",id:"opensearch-dashboard-1",level:4},{value:"Verify if the containers are up &amp; running",id:"verify-if-the-containers-are-up--running",level:3},{value:"Enable Client Logging",id:"enable-client-logging",level:3},{value:"Enable Server Logging",id:"enable-server-logging",level:3}],p={toc:c},u="wrapper";function h(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"logging-with-opensearch-on-docker"},"Logging with Opensearch on Docker"),(0,a.kt)("p",null,"If you want to quickstart with detailed logging using opensearch, Please follow this guide. "),(0,a.kt)("h2",{id:"setup-opensearch-on-docker-locally"},"Setup Opensearch on Docker locally"),(0,a.kt)("h3",{id:"pull-opensearch-images"},"Pull OpenSearch Images"),(0,a.kt)("h4",{id:"opensearch"},"OpenSearch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull opensearchproject/opensearch:latest\n")),(0,a.kt)("h4",{id:"opensearch-dashboard"},"OpenSearch Dashboard"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull opensearchproject/opensearch-dashboards:latest\n")),(0,a.kt)("h3",{id:"start-opensearch-containers"},"Start Opensearch Containers"),(0,a.kt)("h4",{id:"opensearch-1"},"OpenSearch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'docker run -d -p 9200:9200 -p 9600:9600 -e "discovery.type=single-node" -e "plugins.security.disabled=true" opensearchproject/opensearch:latest \n')),(0,a.kt)("h4",{id:"opensearch-dashboard-1"},"OpenSearch Dashboard"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'docker run -it -d --network="host" -e "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true" opensearchproject/opensearch-dashboards:latest\n')),(0,a.kt)("h3",{id:"verify-if-the-containers-are-up--running"},"Verify if the containers are up & running"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Send a request to port 9200")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"    curl http://127.0.0.1:9200\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"List Indices through curl ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'    curl -X GET "http://127.0.0.1:9200/_cat/indices?v"\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create Indices through Curl ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'    curl -X PUT "http://127.0.0.1:9200/your_index_name"\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Delete Index ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"    curl --location --request DELETE 'http://127.0.0.1:9200/index_name'\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Fetch logs for an index_name")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"    curl --location --request GET 'http://127.0.0.1:9200/ethereal/_search' \\\n    --header 'Content-Type: application/json' \\\n    --data '{\n    \"query\": {\n        \"match_all\": {}\n    },\n    \"size\": 10000\n    }'\n")),(0,a.kt)("h3",{id:"enable-client-logging"},"Enable Client Logging"),(0,a.kt)("p",null,"Set VITE_FORCE_CLIENT_LOG_AGGREGATE to true to enable client log aggregation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"VITE_FORCE_CLIENT_LOG_AGGREGATE=true\n")),(0,a.kt)("h3",{id:"enable-server-logging"},"Enable Server Logging"),(0,a.kt)("p",null,"Set DISABLE_SERVER_LOG=false to false to enable server log aggregation  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"DISABLE_SERVER_LOG=false\n    \n")),(0,a.kt)("p",null,"Note: These changes in the ",(0,a.kt)("inlineCode",{parentName:"p"},".env.local")," file will ensure proper communication with OpenSearch and enable client and server log aggregation"))}h.isMDXComponent=!0}}]);