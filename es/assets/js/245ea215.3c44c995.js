"use strict";(self.webpackChunk_etherealengine_docs=self.webpackChunk_etherealengine_docs||[]).push([[7492],{7939:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var i=s(4848),n=s(8453);const a={},o="Turning entities into spatialized objects",r={id:"manual/modules/spatial/transforms",title:"Turning entities into spatialized objects",description:"Transforms",source:"@site/docs/manual/03_modules/02_spatial/01_transforms.md",sourceDirName:"manual/03_modules/02_spatial",slug:"/manual/modules/spatial/transforms",permalink:"/etherealengine-docs/es/manual/modules/spatial/transforms",draft:!1,unlisted:!1,editUrl:"https://github.com/EtherealEngine/etherealengine-docs/blob/master/docs/manual/03_modules/02_spatial/01_transforms.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"manual",previous:{title:"Spatial",permalink:"/etherealengine-docs/es/manual/modules/spatial/"},next:{title:"Spatial Input & WebXR",permalink:"/etherealengine-docs/es/manual/modules/spatial/spatialXRInput"}},c={},l=[{value:"Transforms",id:"transforms",level:2},{value:"Hierarchy",id:"hierarchy",level:2},{value:"Physics",id:"physics",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"turning-entities-into-spatialized-objects",children:"Turning entities into spatialized objects"}),"\n",(0,i.jsx)(t.h2,{id:"transforms",children:"Transforms"}),"\n",(0,i.jsxs)(t.p,{children:["The first concept to spatialize our entities is to introduce the ",(0,i.jsx)(t.code,{children:"TransformComponent"}),". This stores the spatial information for our entity, its ",(0,i.jsx)(t.code,{children:"position"}),", ",(0,i.jsx)(t.code,{children:"rotation"}),", and ",(0,i.jsx)(t.code,{children:"scale"}),". These properties are bitecs-proxified three.js math objects: a Vector3 for position, a Quaternion for rotation, and another Vector3 for scale."]}),"\n",(0,i.jsxs)(t.p,{children:["There are two more properties, the ",(0,i.jsx)(t.code,{children:"matrix"})," and ",(0,i.jsx)(t.code,{children:"matrixWorld"}),", which are three.js Matrix4 properties. ",(0,i.jsx)(t.code,{children:"matrix"})," stores this transform relative to its parent, and ",(0,i.jsx)(t.code,{children:"matrixWorld"})," stores it relative to the absolute origin."]}),"\n",(0,i.jsx)(t.h2,{id:"hierarchy",children:"Hierarchy"}),"\n",(0,i.jsxs)(t.p,{children:["Our next component is the ",(0,i.jsx)(t.code,{children:"EntityTreeComponent"})," which stores the parent/child relationships: a ",(0,i.jsx)(t.code,{children:"parentEntity"})," and ",(0,i.jsx)(t.code,{children:"children"})," array of entities. Changing either of these via ",(0,i.jsx)(t.code,{children:"setComponent"})," will automatically update the parent and children entities to reflect this change."]}),"\n",(0,i.jsxs)(t.p,{children:["To optimize traditional hierarchy-based calculations, the ",(0,i.jsx)(t.code,{children:"TransformSystem"})," automatically sorts a complete list of all spatial entities in order to utilize ",(0,i.jsx)(t.code,{children:"bitecs"}),"\u2019 SoA CPU caching to allow the JavaScript engine to calculate matrices as fast as possible."]}),"\n",(0,i.jsx)(t.h2,{id:"physics",children:"Physics"}),"\n",(0,i.jsx)(t.p,{children:"Physics is split into two systems."}),"\n",(0,i.jsxs)(t.p,{children:["The first is the ",(0,i.jsx)(t.code,{children:"PhysicsSystem"})," which updates the ECS and physics bodies before and after simulation, as well as running the simulation. Substeps can be configured via ",(0,i.jsx)(t.code,{children:"PhysicsState"}),", and the simulation timestep can be configured via ",(0,i.jsx)(t.code,{children:"ECSState"}),". Beyond this, the system has a few neat tricks, such as interpolating kinematic rigidbodies between substeps, and automatically populating and depopulating collision events into the ",(0,i.jsx)(t.code,{children:"CollisionComponent"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["The second is the ",(0,i.jsx)(t.code,{children:"PhysicsPreTransformSystem"})," which has two responsibilities, teleporting rigidbodies & colliders if the ",(0,i.jsx)(t.code,{children:"TransformComponent"})," has been mutated, and smoothly interpolating the transform of an entity between physics steps, such that it does not stutter relative to the device framerate."]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>r});var i=s(6540);const n={},a=i.createContext(n);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);